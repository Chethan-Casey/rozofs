/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _MPROTO_H_RPCGEN
#define _MPROTO_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#include "rozofs.h"

typedef u_char mp_uuid_t[ROZOFS_UUID_SIZE];

enum mp_status_t {
	MP_SUCCESS = 0,
	MP_FAILURE = 1,
};
typedef enum mp_status_t mp_status_t;

struct mp_status_ret_t {
	mp_status_t status;
	union {
		int error;
	} mp_status_ret_t_u;
};
typedef struct mp_status_ret_t mp_status_ret_t;

struct mp_remove_arg_t {
	uint16_t sid;
	mp_uuid_t fid;
};
typedef struct mp_remove_arg_t mp_remove_arg_t;

struct mp_sstat_t {
	uint64_t size;
	uint64_t free;
};
typedef struct mp_sstat_t mp_sstat_t;

struct mp_stat_ret_t {
	mp_status_t status;
	union {
		mp_sstat_t sstat;
		int error;
	} mp_stat_ret_t_u;
};
typedef struct mp_stat_ret_t mp_stat_ret_t;

struct mp_ports_ret_t {
	mp_status_t status;
	union {
		uint32_t ports[STORAGE_NODE_PORTS_MAX];
		int error;
	} mp_ports_ret_t_u;
};
typedef struct mp_ports_ret_t mp_ports_ret_t;

#define MONITOR_PROGRAM 0x20000003
#define MONITOR_VERSION 1

#if defined(__STDC__) || defined(__cplusplus)
#define MP_NULL 0
extern  void * mp_null_1(void *, CLIENT *);
extern  void * mp_null_1_svc(void *, struct svc_req *);
#define MP_STAT 1
extern  mp_stat_ret_t * mp_stat_1(uint16_t *, CLIENT *);
extern  mp_stat_ret_t * mp_stat_1_svc(uint16_t *, struct svc_req *);
#define MP_REMOVE 2
extern  mp_status_ret_t * mp_remove_1(mp_remove_arg_t *, CLIENT *);
extern  mp_status_ret_t * mp_remove_1_svc(mp_remove_arg_t *, struct svc_req *);
#define MP_PORTS 3
extern  mp_ports_ret_t * mp_ports_1(void *, CLIENT *);
extern  mp_ports_ret_t * mp_ports_1_svc(void *, struct svc_req *);
extern int monitor_program_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define MP_NULL 0
extern  void * mp_null_1();
extern  void * mp_null_1_svc();
#define MP_STAT 1
extern  mp_stat_ret_t * mp_stat_1();
extern  mp_stat_ret_t * mp_stat_1_svc();
#define MP_REMOVE 2
extern  mp_status_ret_t * mp_remove_1();
extern  mp_status_ret_t * mp_remove_1_svc();
#define MP_PORTS 3
extern  mp_ports_ret_t * mp_ports_1();
extern  mp_ports_ret_t * mp_ports_1_svc();
extern int monitor_program_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_mp_uuid_t (XDR *, mp_uuid_t);
extern  bool_t xdr_mp_status_t (XDR *, mp_status_t*);
extern  bool_t xdr_mp_status_ret_t (XDR *, mp_status_ret_t*);
extern  bool_t xdr_mp_remove_arg_t (XDR *, mp_remove_arg_t*);
extern  bool_t xdr_mp_sstat_t (XDR *, mp_sstat_t*);
extern  bool_t xdr_mp_stat_ret_t (XDR *, mp_stat_ret_t*);
extern  bool_t xdr_mp_ports_ret_t (XDR *, mp_ports_ret_t*);

#else /* K&R C */
extern bool_t xdr_mp_uuid_t ();
extern bool_t xdr_mp_status_t ();
extern bool_t xdr_mp_status_ret_t ();
extern bool_t xdr_mp_remove_arg_t ();
extern bool_t xdr_mp_sstat_t ();
extern bool_t xdr_mp_stat_ret_t ();
extern bool_t xdr_mp_ports_ret_t ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_MPROTO_H_RPCGEN */
