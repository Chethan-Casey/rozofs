#
# exportd configuration file sample
#

#
# Transform layout used by rozofs. Data will be transform in *forward* chunks,
# only *inverse* of them will be need to reconstruct, and they will be 
# distributed over *safe* storages.  
# Valid layouts are :
#   - 0 : inverse = 2, forward = 3, safe = 4
#   - 1 : inverse = 4, forward = 6, safe = 8
#   - 2 : inverse = 8, forward = 12, safe = 16
#

layout = 2;

# Volume
# each cluster should be contain at least *safe* storages of the same capacity.
# Use a new cluster when scaling with storage of different capacity.
# WARNING WARNING WARNING WARNING
# modifying or removing sid of storage servers can (will) lead to DATA LOSS !
volumes =
(
    {
        # First volume
        vid = 1;
        cids= 
        (
            {
                # First cluster
                cid = 1;
                sids =
                (
                    {sid = 01; host = "host1";},
                    {sid = 02; host = "host2";},
                    {sid = 03; host = "host3";},
                    {sid = 04; host = "host4";},
                    {sid = 05; host = "host5";},
                    {sid = 06; host = "host6";},
                    {sid = 07; host = "host7";},
                    {sid = 08; host = "host8";},
                    {sid = 09; host = "host9";},
                    {sid = 10; host = "host10";},
                    {sid = 11; host = "host11";},
                    {sid = 12; host = "host12";},
                    {sid = 13; host = "host13";},
                    {sid = 14; host = "host14";},
                    {sid = 15; host = "host15";},
                    {sid = 16; host = "host16";}
                    # ...
                );
            },
            {
                # Second cluster
                cid = 2;
                sids =
                (
                    {sid = 17; host = "host17";},
                    {sid = 18; host = "host18";},
                    {sid = 19; host = "host19";},
                    {sid = 20; host = "host20";},
                    {sid = 21; host = "host21";},
                    {sid = 22; host = "host22";},
                    {sid = 23; host = "host23";},
                    {sid = 24; host = "host24";},
                    {sid = 25; host = "host25";},
                    {sid = 26; host = "host26";},
                    {sid = 27; host = "host27";},
                    {sid = 28; host = "host28";},
                    {sid = 29; host = "host29";},
                    {sid = 30; host = "host30";},
                    {sid = 31; host = "host31";},
                    {sid = 32; host = "host32";}
                    # ...
                );
            }
        );
    },
    {
        # Second volume
        vid = 2;
        cids = 
        (
            {
                cid = 3;
                sids =
                (
                    {sid = 32; host = "host32";},
                    {sid = 33; host = "host33";},
                    {sid = 34; host = "host34";},
                    {sid = 35; host = "host35";},
                    {sid = 36; host = "host36";},
                    {sid = 37; host = "host37";},
                    {sid = 38; host = "host38";},
                    {sid = 39; host = "host39";},
                    {sid = 40; host = "host40";},
                    {sid = 41; host = "host41";},
                    {sid = 42; host = "host42";},
                    {sid = 43; host = "host43";},
                    {sid = 44; host = "host44";},
                    {sid = 45; host = "host45";},
                    {sid = 46; host = "host46";},
                    {sid = 47; host = "host47";}
                    # ...
                );
            }
        );
    }
)
;

# exported filesystems
# md5 is a 22 characters md5 crypt of the password.
# It could be generated with: md5 utility (see md5pass (1))
# the salt used should be: rozofs. 
# Only the last 22 characters should be used (omitting newline)
# example: 
# for password "mypass", md5 is: md5pass mypass rozofs | cut -c 11-
# that is: AyBvjVmNoKAkLQwNa2c4b0
# For no authentification use empty md5.
# Quota are express in nb blocks (no suffix), Kilo, Mega or Giga Bytes 
# accordind to suffix K, M or G
# only the first letter of suffix is used that is:
# 128G is equivalent to 128Giga wich in turn can be 128GigaBytes etc...
# For no quota use empty quota.
# warning: any other suffix leads to quota express in blocks.
exports = (
    {eid = 1; root = "/path/to/foo"; md5="AyBvjVmNoKAkLQwNa2c4b0"; quota="256G"; vid=1;},
    {eid = 2; root = "/path/to/bar"; md5=""; quota = "", vid=2;}
);
